version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: videosaas-postgres
    environment:
      POSTGRES_DB: videosaas
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - videosaas-network

  # Redis for Queue Management
  redis:
    image: redis:7-alpine
    container_name: videosaas-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - videosaas-network

  # Backend API
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: videosaas-api
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/videosaas
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    networks:
      - videosaas-network
    volumes:
      - ./apps/api:/app
      - /app/node_modules
    restart: unless-stopped

  # Frontend Web App
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: videosaas-web
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://api:3001
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - videosaas-network
    volumes:
      - ./apps/web:/app
      - /app/node_modules
      - /app/.next
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: videosaas-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - web
      - api
    networks:
      - videosaas-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  videosaas-network:
    driver: bridge 